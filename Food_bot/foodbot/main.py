import asyncio
import logging

from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties

from foodbot.config import settings
from foodbot.database import init_db
from foodbot.routers import registration_router, admin_router, menu_router, menu_btn_router, feedback_router


router = Router()


@router.message(Command("start"))
async def cmd_start(message: types.Message) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    # Reply-–∫–Ω–æ–ø–∫–∞ ¬´–ê–¥–º–∏–Ω¬ª —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    from foodbot.routers.admin import _is_admin  # –ª–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
    if await _is_admin(message.from_user.id, message.from_user.username):
        rkb = types.ReplyKeyboardMarkup(
            keyboard=[[types.KeyboardButton(text="–ê–¥–º–∏–Ω")]], resize_keyboard=True
        )
    else:
        rkb = None

    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤. –í—Å–µ –∑–∞–∫–∞–∑—ã –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–∑–¥–∞—ë—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n"
        "–ï—Å–ª–∏ –≤—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.",
    )

    if rkb:
        await message.answer("–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ê–¥–º–∏–Ω'.", reply_markup=rkb)


@router.message(F.text.lower() == "–∞–¥–º–∏–Ω")
async def msg_admin_shortcut(message: types.Message):
    from foodbot.routers.admin import _is_admin, _build_admin_kb

    if not await _is_admin(message.from_user.id, message.from_user.username):
        return
    await message.answer("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=_build_admin_kb())


async def _sync_admins(bot: Bot) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ is_admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ ADMIN_USERNAMES."""
    from foodbot.database import get_session  # –ª–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
    from foodbot.models import User
    from sqlmodel import select

    async with get_session() as session:
        for raw_username in settings.admin_usernames.split() or []:
            raw_username = raw_username.strip()
            if not raw_username:
                continue

            try:
                chat = await bot.get_chat(raw_username)  # Telegram API –∂–¥—ë—Ç @username
            except Exception:  # noqa: BLE001
                continue

            username = raw_username.lstrip("@")

            result = await session.exec(select(User).where(User.tg_id == chat.id))
            user = result.first()
            if user:
                user.is_admin = True
                user.is_approved = True  # –∞–¥–º–∏–Ω–∞ —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–º
            else:
                session.add(User(tg_id=chat.id, full_name=chat.full_name or username, is_admin=True, is_approved=True))
            await session.commit()


async def main() -> None:
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(name)s - %(message)s")

    bot = Bot(token=settings.bot_token, default=DefaultBotProperties(parse_mode="HTML"))
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)
    dp.include_router(router)  # —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    dp.include_router(registration_router)
    dp.include_router(admin_router)
    dp.include_router(menu_router)
    dp.include_router(menu_btn_router)
    dp.include_router(feedback_router)

    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    await init_db()

    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–Ω–∏–º–∞–µ–º —Å—Ç–∞—Ä—ã–π webhook, –µ—Å–ª–∏ –æ–Ω –±—ã–ª, —á—Ç–æ–±—ã Telegram –Ω–µ –¥–µ—Ä–∂–∞–ª –≤—Ç–æ—Ä–æ–π getUpdates
    try:
        await bot.delete_webhook(drop_pending_updates=True)
    except Exception as e:  # noqa: BLE001
        logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: %s", e)

    await _sync_admins(bot)

    # –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π —Ç–∞—Å–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ –¥–µ–¥–ª–∞–π–Ω—É
    from foodbot.services.menus import deadline_checker
    asyncio.create_task(deadline_checker(bot))

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main()) 